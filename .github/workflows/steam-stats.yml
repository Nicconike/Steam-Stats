name: Steam Stats

on:
    schedule:
        # Runs every Monday at 12AM IST (UTC+5:30)
        - cron: "30 18 * * 0"
    workflow_dispatch:
    push:
        branches:
            - master
        paths:
            - '.github/workflows/steam-stats.yml'
            - 'api/*.py'
    pull_request:
        branches:
            - master

jobs:
    check-release:
        runs-on: ubuntu-latest
        outputs:
            latest_run: ${{ steps.check_release.outputs.latest_run }}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Check if Release Action is running
            id: check_release
            run: |
                latest_run=$(gh run list --workflow=release.yml --branch=master --json conclusion --jq '.[0].conclusion')
                echo "latest_run=$latest_run" >> $GITHUB_ENV
                echo "::set-output name=latest_run::$latest_run"
            env:
                GH_TOKEN: ${{ secrets.GH_TOKEN }}

    wait-for-release:
        runs-on: ubuntu-latest
        needs: check-release
        if: needs.check-release.outputs.latest_run == 'success' || needs.check-release.outputs.latest_run == 'failure'
        steps:
          - name: Wait for Release Action to complete
            uses: kamilchodola/wait-for-workflow-action@1.1.0
            with:
                GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
                workflow_id: 'release.yml'
                org_name: 'nicconike'
                repo_name: 'steam-stats'
                ref: 'refs/heads/master'
                max_wait_minutes: 10
                interval: 10
                timeout: 60


    update-readme:
        name: Steam Stats
        runs-on: ubuntu-latest
        needs: [check-release, wait-for-release]
        if: needs.check-release.outputs.latest_run == 'success' || needs.check-release.outputs.latest_run == 'not_triggered'
        container:
            image: nicconike/steam-stats:latest
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
            with:
                token: ${{ secrets.GH_TOKEN }}

          - name: Update Steam Stats in README
            run: python api/main.py
            env:
                INPUT_STEAM_API_KEY: ${{ secrets.STEAM_API_KEY }}
                INPUT_STEAM_ID: ${{ secrets.STEAM_ID }}
                INPUT_STEAM_CUSTOM_ID: ${{ secrets.STEAM_CUSTOM_ID }}
                INPUT_WORKSHOP_STATS: True
                INPUT_LOG_SCALE: True

          - name: Commit and Push
            run: |
                git config --global user.email "action@github.com"
                git config --global user.name "GitHub Action"
                git add .
                git commit -m "Updated Steam Stats" || echo "No changes to commit"
                git push
