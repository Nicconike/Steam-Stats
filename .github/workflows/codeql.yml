name: CodeQL & Pylint

on:
    workflow_call:
        secrets:
            APP_ID:
                required: true
            APP_PRIVATE_KEY:
                required: true
    push:
        branches: [master]
        paths:
            - ".github/workflows/codeql.yml"
            - "**/*.py"
    pull_request:
        branches: [master]

permissions:
    contents: read

jobs:
    codeql:
        if: |
            github.actor != 'dependabot[bot]' &&
            github.actor != 'github-actions[bot]' &&
            github.actor != 'protected-auto-commits[bot]'
        name: CodeQL
        runs-on: ubuntu-latest
        concurrency: codeql
        permissions:
            actions: read
            contents: read
            security-events: write
        steps:
            - name: Harden the runner
              uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
              with:
                  egress-policy: audit

            - name: Checkout Repo
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

            - name: Initialize CodeQL
              uses: github/codeql-action/init@303c0aef88fc2fe5ff6d63d3b1596bfd83dfa1f9 # v3.30.4
              with:
                  languages: python
                  config-file: ./.github/workflows/codeql.yml
                  queries: +security-and-quality

            - name: Autobuild
              uses: github/codeql-action/autobuild@303c0aef88fc2fe5ff6d63d3b1596bfd83dfa1f9 # v3.30.4

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@303c0aef88fc2fe5ff6d63d3b1596bfd83dfa1f9 # v3.30.4

    pylint:
        name: Pylint
        runs-on: ubuntu-latest
        needs: codeql
        steps:
            - name: Harden the runner
              uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
              with:
                  egress-policy: audit

            - name: GitHub App Token
              uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
              id: app-token
              with:
                  app-id: ${{ secrets.APP_ID }}
                  private-key: ${{ secrets.APP_PRIVATE_KEY }}

            - name: Checkout Code
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
              with:
                  token: ${{ steps.app-token.outputs.token }}

            - name: Setup Python
              uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
              with:
                  python-version: "3.13"
                  cache: "pip"

            - name: Cache Dependencies
              uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Run Pylint and Generate Badge
              id: run-pylint
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pylint_output=$(pylint api tests || true)
                  echo "$pylint_output"

                  score=$(echo "$pylint_output" | grep -oP 'Your code has been rated at \K[0-9]+\.[0-9]+' || echo "0.0")
                  color="red"
                  if (( $(echo "$score == 10" | bc -l) )); then
                      color="brightgreen"
                  elif (( $(echo "$score >= 9" | bc -l) )); then
                      color="greenyellow"
                  elif (( $(echo "$score >= 8" | bc -l) )); then
                      color="orange"
                  elif (( $(echo "$score >= 7" | bc -l) )); then
                      color="lightred"
                  elif (( $(echo "$score >= 6" | bc -l) )); then
                      color="red"
                  fi

                  badge="![Pylint](https://img.shields.io/badge/Pylint-$score-$color?logo=python)"
                  echo "PYLINT_BADGE=$badge" >> $GITHUB_OUTPUT

            - name: Update README with Pylint Badge
              if: github.ref == 'refs/heads/master'
              env:
                  GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
                  PYLINT_BADGE: ${{ steps.run-pylint.outputs.PYLINT_BADGE }}
              run: |
                  sed -i "s|!\[Pylint\](.*)|$PYLINT_BADGE|" README.md
                  git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git config --global user.name "github-actions[bot]"
                  git add README.md
                  git commit -m "chore: Update Pylint Badge" || echo "No changes to commit"
                  git pull --rebase origin master
                  git push origin HEAD:master
