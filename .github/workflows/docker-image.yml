name: Docker CI

on:
    push:
        branches:
            - "master"
        tags:
            - "v*"
    pull_request:
        branches:
            - "master"

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Set up Python
            uses: actions/setup-python@v5
            with:
                python-version: "3.x"

          - name: Install dependencies
            run: |
                pip install setuptools wheel twine
                pip install python-semantic-release

          - name: Semantic Release
            id: semantic_release
            env:
                GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
            run: semantic-release publish

          - name: Extract version
            id: extract_version
            run: echo "VERSION=$(npx semantic-release --dry-run | grep "The next release version is" | awk "{print $6}")" >> $GITHUB_ENV

    build:
        needs: release
        runs-on: ubuntu-latest

        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Docker Metadata
            id: docker_meta
            uses: docker/metadata-action@v5
            with:
                images: |
                    nicconike/steam-stats
                tags: |
                    type=ref,event=branch
                    type=ref,event=pr
                    type=semver,pattern=v{{version}}
                    type=semver,pattern=v{{major}}.{{minor}}.{{patch}}

          - name: Log in to Docker Hub
            if: github.event_name != 'pull_request'
            uses: docker/login-action@v3
            with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_TOKEN }}

          - name: Build and push Docker image
            id: docker_build
            uses: docker/build-push-action@v5
            with:
                context: .
                push: ${{ github.event_name != 'pull_request' }}
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}

          - name: Remove dangling images
            run: docker image prune -f

    docker-scout:
        needs: build
        runs-on: ubuntu-latest

        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: Docker Scout Analysis
            uses: docker/scout-action@v1
            with:
                image: nicconike/steam-stats:${{ env.VERSION }}
                command: cves
                only-severities: critical,high
                exit-code: true
