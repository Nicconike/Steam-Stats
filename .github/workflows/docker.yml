name: Docker CICD

on:
    push:
        branches:
        - master
        paths:
        - '**/*.yml'
        - '**/*.py'
        - 'Dockerfile'
    pull_request:
        branches:
        - master
        paths:
        - '**/*.py'
        - 'Dockerfile'

jobs:
    changed_files:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Code
            uses: actions/checkout@v4

          - name: Detect Changes
            id: changed-files
            uses: tj-actions/changed-files@v44

          - name: List all Changes
            env:
                ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
            run: |
                for file in ${ALL_CHANGED_FILES}; do
                    echo "$file was changed"
                done

    build-and-publish:
        runs-on: ubuntu-latest
        needs: changed_files
        steps:
          - name: Checkout Code
            uses: actions/checkout@v4

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Log in to Docker Hub
            uses: docker/login-action@v3
            with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_TOKEN }}

          - name: Extract Docker Metadata
            id: meta
            uses: docker/metadata-action@v5
            with:
                images: ${{ secrets.DOCKER_USERNAME }}/steam-stats
                tags: |
                    type=ref,event=branch
                    type=ref,event=pr
                    type=semver,pattern={{version}}
                    type=semver,pattern={{major}}.{{minor}}.{{patch}}

          - name: Build & Push Docker Image
            uses: docker/build-push-action@v5
            with:
                context: .
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max

    update-changelog:
        permissions:
            id-token: write
            contents: write
        runs-on: ubuntu-latest
        needs: build-and-publish
        if: success()
        steps:
          - name: Checkout Code
            uses: actions/checkout@v4
            with:
                fetch-depth: 0

          - name: Install Dependencies
            run: |
                python -m pip install --upgrade pip
                pip install python-semantic-release

          - name: Semantic Release
            uses: python-semantic-release/python-semantic-release@v9.8.1
            with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
