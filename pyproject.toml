[build-system]
requires = ["setuptools>=80.0,<90.0"]
build-backend = "setuptools.build_meta"

[project]
name = "Steam-Stats"
version = "1.4.0"
authors = [{ name = "Nicco", email = "github.giving328@passmail.com" }]
description = "A python project to get the stats of your Steam account and display them in your GitHub profile."
requires-python = ">= 3.8"
readme = "README.md"
license = "GPL-3.0"
license-files = ["LICENSE"]
dependencies = [
    "bs4==0.0.2",
    "DateTime==5.5",
    "playwright==1.55.0",
    "PyGithub==2.8.1",
    "python-semantic-release==10.4.1",
]
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: System :: Monitoring",
    "Topic :: Games/Entertainment",
    "Topic :: Utilities",
]

[project.urls]
Homepage = "https://github.com/Nicconike/Steam-Stats"
Changelog = "https://github.com/Nicconike/Steam-Stats/blob/master/CHANGELOG.md"
Documentation = "https://github.com/Nicconike/Steam-Stats/blob/master/README.md"
Wiki = "https://github.com/Nicconike/Steam-Stats/wiki"
Issues = "https://github.com/Nicconike/Steam-Stats/issues"

[project.optional-dependencies]
test = [
    "pytest-asyncio==1.2.0",
    "pytest-cov==7.0.0",
    "pytest-mock==3.15.1",
    "requests-mock==1.12.1",
]
dev = [
    "build==1.3.0",
    "bandit==1.8.6",
    "pipdeptree==2.28.0",
    "pylint==3.3.8",
    "python-dotenv==1.1.1",
    "twine==6.2.0",
]
docs = [
    "mkdocs-material==9.6.20",
    "mkdocs-mermaid2-plugin==1.2.2",
    "mkdocs-minify-plugin==0.8.0",
    "mkdocstrings-python==1.18.2",
]

[tool.setuptools.packages.find]
where = ["api"]

[tool.semantic_release]
version_variables = ["api/main.py:__version__"]
version_toml = ["pyproject.toml:project.version"]
version_source = "tag"
match = "master"
commit_message = "chore(release): Version Release v{version}"
tag_format = "v{version}"
logging_use_named_masks = true
commit_parser = "conventional"
commit_parser_options = { parse_squash_commits = true, ignore_merge_commits = true }

[tool.semantic_release.remote]
type = "github"
token = { env = "GH_TOKEN" }

[tool.semantic_release.changelog]
default_templates.changelog_file = "CHANGELOG.md"
mode = "update"
insertion_flag = "<!-- CHANGELOG -->"
exclude_commit_patterns = [
    '''chore(?:\([^)]*?\))?: .+''',
    '''ci(?:\([^)]*?\))?: .+''',
    '''refactor(?:\([^)]*?\))?: .+''',
    '''style(?:\([^)]*?\))?: .+''',
    '''test(?:\([^)]*?\))?: .+''',
    '''build\((?!deps\): .+)''',
    '''Merged? .*''',
    '''Initial Commit*''',
]

[tool.semantic_release.changelog.environment]
trim_blocks = true

[tool.semantic_release.publish]
upload_to_vcs_release = true
upload_to_pypi = true
dist_glob_patterns = ["dist/*"]
