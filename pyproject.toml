[build-system]
requires = ["setuptools >= 70"]
build-backend = "setuptools.build_meta"

[project]
name = "steam-stats"
authors = [
    { name = "Nicco", email = "38905025+Nicconike@users.noreply.github.com" }
]
dynamic = "version_variables"
dependencies = [
    "bs4==0.0.2",
    "DateTime==5.5",
    "pipdeptree==2.23.0",
    "playwright==1.44.0",
    "python-semantic-release==9.8.3"
]
requires-python = ">= 3.8"
readme = "README.md"
license = {file = "LICENSE"}

[project.urls]
Changelog = "https://github.com/Nicconike/Steam-Stats/blob/master/CHANGELOG.md"
Documentation = "https://github.com/Nicconike/Steam-Stats/blob/master/README.md"
Wiki = "https://github.com/Nicconike/Steam-Stats/wiki"

[tool.semantic_release]
version_variables = ["api/main.py:__version__"]
branch = "master"
upload_to_release = true
commit_message = "Version Release: v{version}\n\nCo-authored-by: Nicconike <38905025+Nicconike@users.noreply.github.com>"
tag_format = "v{version}"
changelog_file = "CHANGELOG.md"
template_dir = "templates"

[tool.semantic_release.branches]
main = { match = "master", prerelease_token = "rc", prerelease = false }

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test", "revert"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.publish]
upload_to_vcs_release = true

[tool.semantic_release.dist_glob_patterns]
include = [
    ".github/**",
    "api/*",
    "assets/*",
    "tests/*",
    ".env.example",
    "action.yml",
    "README.md",
    "CHANGELOG.md",
    "LICENSE",
    "requirements.txt",
]
exclude = [
    ".github/workflows/*",
    "assets/recently_played_games(linear).png",
    "assets/recently_played_games(logarithmic).png",
    "templates/*",
    ".dockerignore",
    ".gitignore",
    "Dockerfile",
    "pyproject.toml",
]

[tool.semantic_release.plugins]
verify_conditions = [
    "@semantic-release/git",
    "@semantic-release/github"
]
analyze_commits = [
    "@semantic-release/commit-analyzer"
]
generate_notes = [
    "@semantic-release/release-notes-generator"
]
prepare = [
    "@semantic-release/changelog",
    "@semantic-release/git"
]
publish = [
    "@semantic-release/github"
]
success = [
    "@semantic-release/github"
]
fail = [
    "@semantic-release/github"
]
