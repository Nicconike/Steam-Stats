[tool.semantic_release]
version_variables = ["api/main.py:__version__"]
branch = "master"
upload_to_release = true
commit_message = "{version}\n\nNew Version Release"
tag_format = "v{version}"
changelog_file = "CHANGELOG.md"
template_dir = "templates"

[tool.semantic_release.branches]
main = { match = "master", prerelease_token = "rc", prerelease = false }

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test", "revert"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.publish]
dist_glob_patterns = [
    "api/*.py",
    "assets/*.png",
    "![l].png",
    "*.md",
    "LICENSE",
    "action.yml",
    "requirements.txt"
]
upload_to_vcs_release = true

[tool.semantic_release.plugins]
verify_conditions = [
    "@semantic-release/git",
    "@semantic-release/github"
]
analyze_commits = [
    "@semantic-release/commit-analyzer"
]
generate_notes = [
    "@semantic-release/release-notes-generator"
]
prepare = [
    "@semantic-release/changelog",
    "@semantic-release/git"
]
publish = [
    "@semantic-release/github"
]
success = [
    "@semantic-release/github"
]
fail = [
    "@semantic-release/github"
]
